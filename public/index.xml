<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>有完沒完RRR</title>
    <link>/</link>
    <description>Recent content on 有完沒完RRR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 17 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>開始用blogdown寫blog啦</title>
      <link>/post/rblogdown/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/rblogdown/</guid>
      <description> 忙一忙突然又想起blogdown這個packages，今天終於下定決心開始，不知道會持續多久&amp;hellip;..
blogdown blogdown是基於R Markdown和Hugo開發的R package，簡單來說是讓你可以用R Markdown寫Blog的好幫手。先前用過bookdown寫過資料科學與R語言電子書，用來介紹R語言的使用非常方便，不用再辛苦的剪下貼上，也不用擔心程式碼沒上色，導致不清不楚讀者沒耐心看(只有我沒耐心)。
Hugo 決定要寫以後，花了大把時間挑主題(汗)，Hugo有蠻多不錯的主題可選，因為希望頁面乾淨整潔，所以選了hugo-theme-minos，希望不要馬上就看膩了。
卡關最久的是跟相對路徑有關的設定，不知道為什麼Tags跟Categories的連結一直設定不好，看起來是跟$Site.BaseURL有關，後來完全硬幹，把$Site.BaseURL全都改掉了，Google了老半天為什麼會這樣，到目前還是無解。
Netlify 以往都是用GitHub page來存放靜態網頁，這次趁機會試著使用很多人推薦的Netlify(https://www.netlify.com/)，一樣可以跟GitHub做連動，只要Commit &amp;amp; Sync，Netlify會自動部屬網頁，超級方便。 設定的時候有一些參數要注意:
Build command: hugo Publish directory: public Build environment variables key: HUGO_VERSION value:0.26  參考資料:
 Making Websites with R Markdown and blogdown blogdown GitHub page  </description>
    </item>
    
  </channel>
</rss>